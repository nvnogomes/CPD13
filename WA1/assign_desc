 Cálculo de uma figura de Mandelbrot

Pretende-se calcular um conjunto de Mandelbrot. Ver nos slides das aulas práticas uma explicação sobre a forma de geração desta figura O ficheiro mandel.c disponível em Documentação de Apoio->Problemas inclui:

    As rotinas compute e compute_point que produzem uma matriz de pontos correspondendo a uma figura de Mandelbrot. Estas rotinas usam a fórmula de recorrência acima referida e retornam um valor entre 1 e 255 que corresponde ao nível de cinzento do pixel.
    O procedimento output_pgm que a partir da matriz produzida gera uma imagem em tons de cinzento no formato PGM. Os ficheiros neste formato têm um cabeçalho em ASCII e depois aparecem inteiros correspondente ao nível de cinzento de cada pixel. Para detalhes veja o código da função, consulte a Wikipedia ou a seguinte referência. Os ficheiros PPM podem ser visualizados com o programa xview ou display do pacote ImageMagick. 

Pretende-se paralelizar o cálculo da imagem de Mandelbrot.Uma aproximação possível para a é dividir o rectângulo em várias faixas e tornar cada faixa uma unidade de trabalho. Cada processo leve recebe uma faixa definida pela sua largura, altura e coordenadas dos vértices inferior esquerdo e superior direito.

Cada processo calcula o ``bitmap'' correspondente à sua faixa de acordo com a fórmula de recorrência indicada acima. Este bitmap é o resultado do trabalho desse processo.
Estratégias de paralelização

    Estratégia 1- distribuição estática de trabalho: A superfície a calcular é subdividida num número fixo de rectângulos, sendo cada um deles atribuído a um processo. O trabalho associado a cada ponto é variável (é tanto maior quanto o nº de iterações necessário para divergir) pelo que esta estratégia pode atribuir cargas de trabalho diferentes a cada processo leve.
    Estratégia 2- distribuição dinâmica de trabalho: Com uma distribuição de trabalho dinâmica, a superfície é dividida em pequenas parcelas. Cada processador pede uma nova parcela de trabalho após completar a sua tarefa. Esta aproximação tem a vantagem de permitir que processos leves que adquiram porções de trabalho mais pequenas, podem calcular mais do que uma parcela. 

Pretende-se que programe as duas estratégias acima indicadas usando as primitivas do OpenMP. Pretende-se avaliar o tempo gasto, quando se varia o número de processos usados. Isto deve ser feito para as duas estratégias de distribuição de trabalho mencionadas anteriormente. 



+----------------- x1,y1
|                    |
|        L x H       |
|                    |	
x2,y2----------------+

xi = x2 + (x1-x2/L)*i
yi = y2 + (y1-y2/H)*i


xi,p+1 = xip^2 + yip^2
xi,p+1 = xi + yi



xi = x2 + (x1-x)*xi / L
yi = y2 + (y1-y)*xi / H
while ( p < 100 && (xi*xi + yi*yi) <= 4 ) {
	x = xi;
	y = yi;
	xi = x*x + y*y;
	yi = 2*x+y;
	p++;
}
	

cor[xi,yi] = p;


Para cada uma das partes deverá haver:
- uma breve descrição da estratégia usada
- resultados conseguidos com a imagem de referência em
  cada uma das situações abaixo descritas

Imagem de referência:  2048x2048; vértice inferior esquerdo (-1,-1)
vértice superior direito (1, 1)

1ª parte Geração da imagem de Mandelbrot usando o OpenMP (5.5 val)

Para as duas estratégias (estática e dinâmica) apresentar os
resultados para 1 2 ou 4 processadores virtuais. A máquina
tomo-4 pode ser usado para garantir o uso de 4 procesadores
reais


2ª parte Geração da imagem de Mandelbrot usando o MPI (5.5 val)

Para a estratégia dinâmica apresentar os
resultados para 1, 2, 4. 8 e 12 máquinas; supõe-se a
utilização de 1 processo por máquina. Admite-se
o uso do laboratório das aulas práticas; haverá autorização para
usar este laboratório a partir de 4ª feira (3/4).

3ª parte Geração da imagem de Mandelbrot usando o MPI e o OpenMP(5.5 val)

Para a estratégia dinâmica apresentar os
resultados para 1, 2, 4. 8 e 12 máquinas; supõe-se a
utilização de 2 ou 4 processos por máquina. Admite-se
o uso do laboratório das aulas práticas; haverá autorização para
usar este laboratório a partir de 4ª feira (3/4).

4ª parte Geração da imagem de Mandelbrot usando o OpenCL (3.5 val)

Apresentar os resultados usando a máquina tomo-4.

